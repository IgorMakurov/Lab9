Введение
Настоящая пояснительная записка описывает программу “Крестики-Нолики” (далее – Программа), разработанную для реализации игры “Крестики-нолики” на языке программирования Python с использованием библиотеки Tkinter для графического интерфейса пользователя. Разработка Программы велась в рамках учебного проекта по программированию.

Назначение и область применения
Программа “TicTacToe” предназначена для демонстрации реализации классической игры “Крестики-нолики” на компьютере. Основным назначением программы является предоставление пользователю возможности сыграть в “Крестики-нолики” против искусственного интеллекта (ИИ), реализованного с применением алгоритма minimax.

Область применения программы – персональные компьютеры под управлением операционных систем, поддерживающих интерпретатор Python и библиотеку Tkinter. Программа может быть использована в качестве:

Учебного примера для изучения основ программирования на Python, включая работу с GUI (графическим интерфейсом пользователя) и реализацию алгоритмов.
Инструмента для развлечения и отдыха.
Базы для дальнейшего совершенствования и расширения функциональности (например, добавление уровней сложности, сетевой игры и т.п.).
Технические характеристики
Постановка задачи на разработку программы
Задача разработки Программы заключалась в создании интерактивного приложения, позволяющего пользователю играть в “Крестики-нолики” против компьютерного оппонента (ИИ). Программа должна обеспечивать:

Графический интерфейс с игровым полем 3x3.
Возможность выбора игроком символа (крестик или нолик) перед началом игры.
Реализацию ходов игрока и ИИ.
Определение победителя или ничейного исхода игры.
Вывод сообщения о результате игры.
Возможность повторного запуска игры.
Применение алгоритма minimax для обеспечения оптимальной игры ИИ.
Описание применяемых математических методов
В Программе для принятия решения об оптимальном ходе ИИ используется алгоритм minimax. Алгоритм minimax представляет собой рекурсивный алгоритм, который исследует все возможные варианты ходов в игре, прогнозируя действия обоих игроков (максимизирующего и минимизирующего) и выбирая наилучший ход для текущего игрока.

При реализации алгоритма minimax применены следующие допущения:

Оба игрока играют оптимально.
Игра рассматривается как игра с нулевой суммой, где выигрыш одного игрока равен проигрышу другого.
Глубина рекурсии ограничена (в данном случае - полная, так как игра в “Крестики-нолики” относительно простая).
Описание алгоритма и функционирования программы
Инициализация:

Создается главное окно приложения Tkinter.
Начальный экран предлагает выбор символа игрока (крестик или нолик).
После выбора начинается игра: создается игровое поле (9 кнопок), устанавливается текущий игрок. Если первый ход за ИИ, то он его совершает.
Ход игрока:

При нажатии на свободную клетку поля:
Клетка заполняется символом игрока.
Проверяется, не выиграл ли игрок.
Проверяется, не закончилась ли игра ничьей.
Если игра не окончена, ход переходит к ИИ.
Ход ИИ:

Вызывается алгоритм minimax, который определяет наилучший ход для ИИ.
Клетка заполняется символом ИИ.
Проверяется, не выиграл ли ИИ.
Проверяется, не закончилась ли игра ничьей.
Если игра не окончена, ход переходит к игроку.
Определение окончания игры:

Победа: Если на поле выстраивается выигрышная комбинация из трех одинаковых символов, выводится сообщение о победе и предлагается сыграть еще раз.
Ничья: Если все клетки заполнены, а победитель не выявлен, выводится сообщение о ничьей и предлагается сыграть еще раз.
Повторный запуск:

При выборе повторной игры, все данные игры сбрасываются и отображается экран выбора символа.
Описание организации входных и выходных данных
Входные данные:
Выбор игрока (крестик или нолик) на начальном экране.
Координаты нажатия на кнопки игрового поля (номер клетки).
Выходные данные:
Изменение текста кнопок на игровом поле для отображения ходов.
Сообщения о результате игры (победа или ничья).
Сообщение с предложением сыграть еще раз.
Описание и обоснование выбора технических и программных средств
Язык программирования: Python (версия 3.x) - выбран из-за простоты синтаксиса, наличия большого количества библиотек и кроссплатформенности.
Библиотека GUI: Tkinter - стандартная библиотека для создания графического интерфейса в Python, не требующая дополнительных установок.
Операционная система: Любая ОС с поддержкой Python и Tkinter.
Ожидаемые технико-экономические показатели
Программа является бесплатной и доступной для использования любым пользователем, имеющим интерпретатор Python.
Разработка Программы не требует значительных затрат времени и ресурсов, что делает ее экономически выгодной для учебных целей.
Программа обеспечивает простоту использования и интуитивно понятный интерфейс.
Алгоритм minimax обеспечивает игру с ИИ на уровне, который может бросить вызов игроку.
Источники, использованные при разработке
Документация к библиотеке Tkinter: https://docs.python.org/3/library/tkinter.html
Описание алгоритма Minimax: https://en.wikipedia.org/wiki/Minimax
Учебные материалы по разработке игр на Python.
