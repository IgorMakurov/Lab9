1. Введение

Настоящее техническое задание (ТЗ) определяет требования к разработке программного обеспечения (ПО) «Крестики-нолики», представляющего собой реализацию классической настольной игры для двух игроков (человек против ИИ) на платформе Windows. ПО предназначено для развлечения и тренировки логического мышления, а также демонстрирует базовые принципы алгоритма минимакс. Программа предназначена для использования на персональных компьютерах (ПК).

2. Основания для разработки

Документ-основание: Отсутствует официальный документ-основание, разработка ведется в рамках учебного проекта и для демонстрационных целей.
Организация, утвердившая документ: Учебный проект, утвержден самим разработчиком.
Наименование темы разработки: «Разработка программного обеспечения «Крестики-нолики»».
3. Назначение разработки

Программное обеспечение «Крестики-нолики» предназначено для следующих целей:

Функциональное назначение: Реализация игры «Крестики-нолики» между пользователем и искусственным интеллектом (ИИ) с возможностью выбора символа для игрока (крестик или нолик).
Эксплуатационное назначение: Предоставление пользователю удобного и интуитивно понятного интерфейса для игры в «Крестики-нолики», демонстрация работы алгоритма минимакс для ИИ.
4. Требования к программе или программному изделию

4.1. Требования к функциональным характеристикам:

Игра:
Игра должна начинаться с экрана выбора игроком символа (крестик или нолик).
Игровое поле должно быть представлено в виде сетки 3x3.
Должна быть реализована пошаговая игра, где игрок и ИИ ходят по очереди.
Должна быть предусмотрена возможность нажатия на пустую ячейку поля для совершения хода.
ИИ должен использовать алгоритм минимакс для выбора оптимального хода.
После каждого хода должна осуществляться проверка на выигрыш или ничью.
Должно отображаться сообщение о результате игры (выигрыш игрока, выигрыш ИИ, ничья).
Должна быть предусмотрена возможность начать новую игру после окончания текущей.
Интерфейс:
Оконное приложение с понятным и интуитивно-привлекательным интерфейсом.
Кнопки выбора символа игрока (крестик и нолик).
Кнопки, соответствующие игровому полю 3х3.
Текстовые сообщения о ходе игры и результатах.
4.2. Требования к надежности:

Программа должна корректно обрабатывать все возможные сценарии игры.
Программа должна корректно обрабатывать ошибочные действия пользователя (например, попытка хода в занятую ячейку).
Программа должна обеспечивать устойчивую работу без сбоев на протяжении всего игрового процесса.
После непредвиденного сбоя программа должна либо закрыться, либо корректно переинициализироваться, при этом не оставляя “мусора” в системе.
4.3. Условия эксплуатации:

Операционная система: Windows 7 или выше.
Аппаратные требования: Минимальные требования для запуска ОС Windows.
Программа не требует специальных условий эксплуатации, кроме наличия ПК с ОС Windows.
Для использования программы не требуется специального обучения или квалификации.
4.4. Требования к составу и параметрам технических средств:

Компьютер с процессором не ниже Intel Pentium 4 или аналогичного.
Оперативная память не менее 256 Мб.
Видеокарта с поддержкой DirectX 9.0 или выше.
Разрешение экрана не ниже 800x600.
Устройства ввода: клавиатура и мышь.
4.5. Требования к информационной и программной совместимости:

Программа должна быть написана на языке Python 3.6 или выше.
Для разработки графического интерфейса использовать библиотеку Tkinter.
Программа не должна требовать дополнительных библиотек, не входящих в стандартную установку Python.
4.6. Требования к маркировке и упаковке:

Программное изделие должно поставляться в виде исполняемого файла .exe (при необходимости можно включить и исходный код).
Название файла должно соответствовать имени программного изделия “tictactoe.exe”.
Отдельной упаковки не требуется.
4.7. Требования к транспортированию и хранению:

Программа может распространяться электронно.
Хранение возможно на любых носителях (жесткий диск, USB-накопитель, облачное хранилище).
Специальные условия хранения не требуются.
4.8. Специальные требования:

Не предусмотрены.
5. Требования к программной документации

В качестве программной документации предоставляется только текст настоящего технического задания.
Рекомендуется предоставлять исходный код программы с комментариями.
6. Технико-экономические показатели

Ориентировочная экономическая эффективность: Данный проект является учебным, поэтому экономическая эффективность не является основной целью.
Предполагаемая годовая потребность: Программа может использоваться всеми желающими, ограничений на использование не существует.
Экономические преимущества: Отсутствуют, так как это учебный проект.
7. Стадии и этапы разработки

Анализ требований: Разработка настоящего технического задания.
Срок: 1 день.
Исполнитель: Разработчик.
Проектирование: Разработка архитектуры программы и пользовательского интерфейса.
Срок: 1 день.
Исполнитель: Разработчик.
Реализация: Написание кода программы на языке Python.
Срок: 2 дня.
Исполнитель: Разработчик.
Тестирование: Проверка работоспособности программы и устранение ошибок.
Срок: 1 день.
Исполнитель: Разработчик.
Документирование: Подготовка программной документации.
Срок: 0.5 дня.
Исполнитель: Разработчик.
8. Порядок контроля и приемки

Виды испытаний:
Функциональное тестирование: Проверка корректности реализации всех функций, описанных в разделе 4.1.
Тестирование надежности: Проверка устойчивости работы программы, обработки ошибок пользователя.
Тестирование интерфейса: Проверка удобства использования и понятности пользовательского интерфейса.
Общие требования к приемке:
Программа должна соответствовать требованиям, описанным в данном техническом задании.
Программа должна функционировать без ошибок и сбоев.
Интерфейс программы должен быть понятным и удобным для пользователя.
Программа должна быть готова к использованию на ПК с ОС Windows.
